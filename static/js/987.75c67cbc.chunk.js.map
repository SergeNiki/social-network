{"version":3,"file":"static/js/987.75c67cbc.chunk.js","mappings":"qMACA,EAAwB,sB,SCsHxB,EAlHmB,SAACA,GAClB,IAAMC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,GACVC,SAAU,GACVC,gBAAiB,IAEnBC,iBAAkBC,EAAAA,GAAW,CAC3BL,MAAOK,EAAAA,KACJL,MAAM,yBACNM,IAAI,GAAI,iCACRC,SAAS,yBACZN,SAAUI,EAAAA,KACPC,IAAI,GAAI,iCACRC,SAAS,4BACZL,SAAUG,EAAAA,KACPC,IAAI,GAAI,iCACRE,IAAI,EAAG,gCACPD,SAAS,4BACZJ,gBAAiBE,EAAAA,KAAaI,MAC5B,CAACJ,EAAAA,GAAQ,aACT,4BAGJK,SAAU,SAACC,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,cAC9BjB,EAAMkB,OACJH,EAAOX,MACPW,EAAOV,SACPU,EAAOT,SACPU,EACAC,GAEFA,GAAc,MAOlB,OAFAE,QAAQC,IAAInB,EAAOoB,SAGjB,kBAAMP,SAAUb,EAAOqB,aAAvB,WACE,4BACE,kBACEC,KAAK,QACLC,KAAK,QACLC,YAAY,QACZC,MAAOzB,EAAOc,OAAOX,MACrBuB,SAAU1B,EAAO2B,aACjBC,OAAQ5B,EAAO6B,aAEhB7B,EAAO8B,QAAQ3B,OAASH,EAAO+B,OAAO5B,OACrC,cAAG6B,UAAWC,EAAd,SAA8BjC,EAAO+B,OAAO5B,QAC1C,SAEN,4BACE,kBACEmB,KAAK,OACLC,KAAK,WACLC,YAAY,WACZC,MAAOzB,EAAOc,OAAOV,SACrBsB,SAAU1B,EAAO2B,aACjBC,OAAQ5B,EAAO6B,aAEhB7B,EAAO8B,QAAQ1B,UAAYJ,EAAO+B,OAAO3B,UACxC,cAAG4B,UAAWC,EAAd,SAA8BjC,EAAO+B,OAAO3B,WAC1C,SAEN,4BACE,kBACEkB,KAAK,WACLC,KAAK,WACLC,YAAY,WACZC,MAAOzB,EAAOc,OAAOT,SACrBqB,SAAU1B,EAAO2B,aACjBC,OAAQ5B,EAAO6B,aAEhB7B,EAAO8B,QAAQzB,UAAYL,EAAO+B,OAAO1B,UACxC,cAAG2B,UAAWC,EAAd,SAA8BjC,EAAO+B,OAAO1B,WAC1C,SAEN,4BACE,kBACEiB,KAAK,WACLC,KAAK,kBACLC,YAAY,mBACZC,MAAOzB,EAAOc,OAAOR,gBACrBoB,SAAU1B,EAAO2B,aACjBC,OAAQ5B,EAAO6B,aAEhB7B,EAAO8B,QAAQxB,iBAAmBN,EAAO+B,OAAOzB,iBAC/C,cAAG0B,UAAWC,EAAd,SAA8BjC,EAAO+B,OAAOzB,kBAC1C,QAELN,EAAOoB,SAAU,gBAAKY,UAAWC,EAAhB,SAAgCjC,EAAOoB,OAAOf,YAChE,0BACE,mBACEiB,KAAK,SACLY,UACGlC,EAAOc,OAAOX,QACdH,EAAOc,OAAOV,WACdJ,EAAOc,OAAOT,WACdL,EAAOc,OAAOR,iBAEfN,EAAOmC,aARX,2B,UCvFR,GAAeC,EAAAA,EAAAA,IAAQ,KAAM,CAACnB,OAAAA,EAAAA,IAA9B,EATe,SAAClB,GACd,OACE,4BACE,oCACA,SAAC,EAAD,CAAYkB,OAAQlB,EAAMkB","sources":["webpack://way-samurai/./src/components/Content/Signup/Singup.module.css?4972","components/Content/Signup/SignupForm.jsx","components/Content/Signup/Signup.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"error\":\"Singup_error__-q7IG\"};","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport classes from \"./Singup.module.css\";\r\n\r\nconst SignupForm = (props) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .email(\"invalid email address\")\r\n        .max(60, \"must be 60 characters or less\")\r\n        .required(\"email cannot be empty\"),\r\n      username: Yup.string()\r\n        .max(30, \"must be 30 characters or less\")\r\n        .required(\"username cannot be empty\"),\r\n      password: Yup.string()\r\n        .max(30, \"must be 30 characters or less\")\r\n        .min(8, \"must be 8 characters or more\")\r\n        .required(\"password cannot be empty\"),\r\n      confirmPassword: Yup.string().oneOf(\r\n        [Yup.ref(\"password\")],\r\n        \"passwords do not match\"\r\n      ),\r\n    }),\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      props.signup(\r\n        values.email,\r\n        values.username,\r\n        values.password,\r\n        setStatus,\r\n        setSubmitting\r\n      );\r\n      setSubmitting(true);\r\n    },\r\n  });\r\n\r\n  \r\n  console.log(formik.status)\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <div>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          value={formik.values.email}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n        />\r\n        {formik.touched.email && formik.errors.email ? (\r\n          <p className={classes.error}>{formik.errors.email}</p>\r\n        ) : null}\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          placeholder=\"Username\"\r\n          value={formik.values.username}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n        />\r\n        {formik.touched.username && formik.errors.username ? (\r\n          <p className={classes.error}>{formik.errors.username}</p>\r\n        ) : null}\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          value={formik.values.password}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n        />\r\n        {formik.touched.password && formik.errors.password ? (\r\n          <p className={classes.error}>{formik.errors.password}</p>\r\n        ) : null}\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          placeholder=\"Confirm password\"\r\n          value={formik.values.confirmPassword}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n        />\r\n        {formik.touched.confirmPassword && formik.errors.confirmPassword ? (\r\n          <p className={classes.error}>{formik.errors.confirmPassword}</p>\r\n        ) : null}\r\n      </div>\r\n      {formik.status && <div className={classes.error}>{formik.status.password}</div>}\r\n      <div>\r\n        <button\r\n          type=\"submit\"\r\n          disabled={\r\n            !formik.values.email ||\r\n            !formik.values.username ||\r\n            !formik.values.password ||\r\n            !formik.values.confirmPassword ||\r\n            // formik.errors ||\r\n            formik.isSubmitting\r\n          }\r\n        >\r\n          Sing Up\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SignupForm from \"./SignupForm\";\r\nimport { signup } from \"../../../redux/auth-reducer\";\r\n\r\nconst Signup = (props) => {\r\n  return (\r\n    <div>\r\n      <h2>Signup</h2>\r\n      <SignupForm signup={props.signup} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, {signup})(Signup);\r\n"],"names":["props","formik","useFormik","initialValues","email","username","password","confirmPassword","validationSchema","Yup","max","required","min","oneOf","onSubmit","values","setStatus","setSubmitting","signup","console","log","status","handleSubmit","type","name","placeholder","value","onChange","handleChange","onBlur","handleBlur","touched","errors","className","classes","disabled","isSubmitting","connect"],"sourceRoot":""}