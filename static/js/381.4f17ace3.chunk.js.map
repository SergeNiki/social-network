{"version":3,"file":"static/js/381.4f17ace3.chunk.js","mappings":"wMACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAA2G,0BAA3G,EAAsJ,gCAAtJ,EAA2M,oCAA3M,EAAkQ,kCAAlQ,EAAwT,mC,oBCAxT,EAA8B,gCAA9B,EAA2E,+B,SCGrEA,EAAY,SAAC,GAAD,SAAGC,SAA2BC,EAAqB,KAarE,EAXmB,SAACC,GAClB,OACE,eAAIC,UAAWF,EAAf,UACE,UAAC,KAAD,CAASG,GAAIF,EAAMG,GAAIF,UAAWJ,EAAlC,WACE,gBAAKO,IAAKJ,EAAMI,IAAKC,IAAI,SACzB,uBAAIL,EAAMM,aCVlB,EAA0B,6BCU1B,EARoB,SAACN,GACnB,OACE,gBAAKC,UAAWF,EAAhB,SACGC,EAAMO,W,oBCiCPC,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACfC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,YAAa,IAEfC,SAAU,SAACC,EAAD,GAA2B,IAAjBC,EAAgB,EAAhBA,UAClBC,QAAQC,IAAIH,GACRA,EAAOF,aAAaJ,EAAYM,EAAOF,aAC3CG,EAAU,CAACD,OAAQ,QAIvB,OACE,kBAAMD,SAAUJ,EAAOS,aAAclB,UAAWF,EAAhD,WACE,gBAAKE,UAAWF,EAAhB,UACE,kBACEqB,KAAK,OACLd,KAAK,cACLe,YAAY,qBACZC,SAAUZ,EAAOa,aACjBC,MAAOd,EAAOK,OAAOF,iBAGzB,gBAAKZ,UAAWF,EAAhB,UACE,mBAAQqB,KAAK,WAAWK,UAAWf,EAAOK,OAAOF,YAAjD,wBAQR,EAjEgB,SAAC,GAAkC,IAAhCa,EAA+B,EAA/BA,YAAajB,EAAkB,EAAlBA,YAG9B,IAAKiB,EACH,OAAO,SAACC,EAAA,EAAD,IAGT,IAAMC,EAAUF,EAAYG,iBAAiBC,KAAI,SAACC,GAAD,OAC/C,SAAC,EAAD,CAEE5B,GAAI4B,EAAO5B,GACXG,KAAMyB,EAAOzB,KACbF,IAAK2B,EAAO3B,KAHP2B,EAAO5B,OAOV6B,EAAWN,EAAYO,aAAaH,KAAI,SAACI,GAAD,OAC5C,SAACC,EAAD,CAAuBhC,GAAI+B,EAAK/B,GAAII,QAAS2B,EAAK3B,SAApC2B,EAAK/B,OAGrB,OACE,iBAAKF,UAAWF,EAAhB,WACE,gBAAKE,UAAWF,EAAhB,UACE,wBAAK6B,OAEP,iBAAK3B,UAAWF,EAAhB,WACE,gBAAKE,UAAWF,EAAhB,SAAyCiC,KACzC,SAACxB,EAAD,CAAaC,YAAaA,WCVlC,GAAe2B,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KAhBoB,SAACC,GACrB,MAAO,CACLZ,YAAaY,EAAMZ,eAcI,CACvBjB,YAAAA,EAAAA,IAEF8B,EAAAA,EAJF,CAKEC,I,iJCxBIC,EAA6B,SAACH,GAAD,MAAY,CAC3CI,OAAQJ,EAAMK,KAAKD,SAGVH,EAAmB,SAACK,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAAIC,KAAK9C,MAAM0C,QAIR,SAACE,GAAD,UAAeE,KAAK9C,SAHhB,SAAC,KAAD,CAAUE,GAAI,eAJU,GACX6C,EAAAA,WAUhC,OAAOV,EAAAA,EAAAA,IAAQI,EAARJ,CAAoCQ","sources":["webpack://way-samurai/./src/components/Content/Dialogs/Dialogs.module.css?5cdb","webpack://way-samurai/./src/components/Content/Dialogs/DialogItem/DialogItem.module.css?2db2","components/Content/Dialogs/DialogItem/DialogItem.jsx","webpack://way-samurai/./src/components/Content/Dialogs/Message/MessageItem.module.css?bb5d","components/Content/Dialogs/Message/Message.jsx","components/Content/Dialogs/Dialogs.jsx","components/Content/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__7gmFp\",\"dialog_items\":\"Dialogs_dialog_items__ZGrAJ\",\"messages\":\"Dialogs_messages__oqCvx\",\"messages_block\":\"Dialogs_messages_block__QRLS6\",\"send_messages_form\":\"Dialogs_send_messages_form__EIXWY\",\"send_input_block\":\"Dialogs_send_input_block__Y2IP1\",\"send_input_button\":\"Dialogs_send_input_button__6ApyG\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog_item\":\"DialogItem_dialog_item__xMqma\",\"activeLink\":\"DialogItem_activeLink__KYhK8\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./DialogItem.module.css\";\r\n\r\nconst setActive = ({ isActive }) => (isActive ? classes.activeLink : \" \");\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <li className={classes.dialog_item}>\r\n      <NavLink to={props.id} className={setActive}>\r\n        <img src={props.src} alt=\"ava\" />\r\n        <p>{props.name}</p>\r\n      </NavLink>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"MessageItem_message__48Ydn\"};","import React from \"react\";\r\nimport classes from \"./MessageItem.module.css\";\r\n\r\nconst MessageItem = (props) => {\r\n  return (\r\n    <div className={classes.message} >\r\n      {props.message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageItem;","import classes from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst Dialogs = ({ dialogsPage, sendMessage }) => {\r\n  // debugger;\r\n\r\n  if (!dialogsPage) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const dialogs = dialogsPage.dialogsItemsData.map((dialog) => (\r\n    <DialogItem\r\n      key={dialog.id}\r\n      id={dialog.id}\r\n      name={dialog.name}\r\n      src={dialog.src}\r\n    />\r\n  ));\r\n\r\n  const messeges = dialogsPage.messagesData.map((mess) => (\r\n    <Message key={mess.id} id={mess.id} message={mess.message} />\r\n  ));\r\n\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialog_items}>\r\n        <ul>{dialogs}</ul>\r\n      </div>\r\n      <div className={classes.messages}>\r\n        <div className={classes.messages_block}>{messeges}</div>\r\n        <MessageForm sendMessage={sendMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MessageForm = ({ sendMessage }) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      messageText: \"\",\r\n    },\r\n    onSubmit: (values, {resetForm} ) => {\r\n      console.log(values);\r\n      if (values.messageText) sendMessage(values.messageText);\r\n      resetForm({values: ''})\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit} className={classes.send_messages_form}>\r\n      <div className={classes.send_input_block}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"messageText\"\r\n          placeholder=\"Write a message...\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.messageText}\r\n        />\r\n      </div>\r\n      <div className={classes.send_input_button}>\r\n        <button type=\"onsubmit\" disabled={!formik.values.messageText}>\r\n          Send\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../../hoc/withAuthRedirect\";\r\nimport {\r\n  sendMessage\r\n} from \"../../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n\r\n// const DialogsContainer = connect(mapStateToProps, {\r\n//   sendMessage,\r\n//   onChangeTextMessage,\r\n// })(AuthRedirectComponent);\r\n\r\n// export default DialogsContainer;\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    sendMessage\r\n  }),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) {\r\n                return <Navigate to={'/login'} />\r\n            }\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}"],"names":["setActive","isActive","classes","props","className","to","id","src","alt","name","message","MessageForm","sendMessage","formik","useFormik","initialValues","messageText","onSubmit","values","resetForm","console","log","handleSubmit","type","placeholder","onChange","handleChange","value","disabled","dialogsPage","Preloader","dialogs","dialogsItemsData","map","dialog","messeges","messagesData","mess","Message","compose","connect","state","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}